{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\engin\\\\Desktop\\\\react\\\\react-course\\\\meetup-app-nextjs\\\\pages\\\\index.js\";\nimport React, { Fragment } from 'react';\nimport Head from 'next/head';\nimport { MongoClient } from 'mongodb';\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Meetups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n/* export async function  getServerSideProps ( context) {\r\n    const req = context.req\r\n    const res = context.res\r\n    return {\r\n        props: {\r\n            meetups: DUMMY_MEETUPS\r\n        }\r\n    }\r\n} */\n\n\nexport async function getStaticProps() {\n  //fetch data from mongodb\n  const client = await MongoClient.connect('mongodb+srv://damla:Damla123.@cluster0.gywvewv.mongodb.net/meetups?retryWrites=true&w=majority'); //hold database that we connect \n\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close(); //always returns an object\n\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    //with revalidate the page is updated regularly after deployment\n    revalidate: 10\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/engin/Desktop/react/react-course/meetup-app-nextjs/pages/index.js"],"names":["React","Fragment","Head","MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBACE,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC;AADT;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAIA,KAAK,CAACC;AAA7B;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAZD;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CAAoB,gGAApB,CAArB,CAFmC,CAI/B;;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAED,QAAMN,OAAO,GAAG,MAAOK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAvB;AACAN,EAAAA,MAAM,CAACO,KAAP,GAVgC,CAWnC;;AACA,SAAO;AACHV,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC5BC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADc;AAE5BC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFY;AAG5BC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHc;AAI5BC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJwB,OAAL,CAAlB;AADN,KADJ;AAUH;AACAC,IAAAA,UAAU,EAAE;AAXT,GAAP;AAaH;AAGD,eAAepB,QAAf","sourcesContent":["import React, { Fragment } from 'react'\r\nimport Head from 'next/head'\r\nimport { MongoClient } from 'mongodb'\r\nimport MeetupList from \"../components/meetups/MeetupList\"\r\n\r\n\r\nconst HomePage = (props) => {\r\n  return (\r\n    <Fragment>\r\n        <Head>\r\n            <title>Meetups</title>\r\n            <meta \r\n                name=''\r\n            />\r\n        </Head>\r\n        <MeetupList meetups = {props.meetups} />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\n/* export async function  getServerSideProps ( context) {\r\n    const req = context.req\r\n    const res = context.res\r\n    return {\r\n        props: {\r\n            meetups: DUMMY_MEETUPS\r\n        }\r\n    }\r\n} */\r\n\r\nexport async function getStaticProps() {\r\n    //fetch data from mongodb\r\n    const client = await MongoClient.connect('mongodb+srv://damla:Damla123.@cluster0.gywvewv.mongodb.net/meetups?retryWrites=true&w=majority')\r\n\r\n        //hold database that we connect \r\n        const db = client.db()\r\n\r\n        const meetupsCollection = db.collection('meetups')\r\n\r\n       const meetups = await  meetupsCollection.find().toArray()\r\n       client.close()\r\n    //always returns an object\r\n    return {\r\n        props: {\r\n            meetups: meetups.map(meetup => ({\r\n                title: meetup.title,\r\n                address: meetup.address,\r\n                image: meetup.image,\r\n                id: meetup._id.toString()\r\n\r\n            }))\r\n        },\r\n        //with revalidate the page is updated regularly after deployment\r\n        revalidate: 10\r\n    }\r\n}\r\n\r\n\r\nexport default HomePage"]},"metadata":{},"sourceType":"module"}