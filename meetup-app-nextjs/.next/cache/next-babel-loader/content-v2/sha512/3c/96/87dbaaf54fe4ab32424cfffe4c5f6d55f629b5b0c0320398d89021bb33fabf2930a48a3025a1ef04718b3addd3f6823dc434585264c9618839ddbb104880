{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\engin\\\\Desktop\\\\react\\\\react-course\\\\meetup-app-nextjs\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport React from 'react';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/engin/Desktop/react/react-course/meetup-app-nextjs/pages/[meetupId]/index.js"],"names":["React","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACM,QAAC,YAAD;AACA,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADxB;AAEA,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFxB;AAGA,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH1B;AAIA,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ9B;AAAA;AAAA;AAAA;AAAA,WADN;AAQD,CATD;;KAAMN,a;;AA0EN,eAAeA,aAAf","sourcesContent":["import React from 'react'\r\nimport { MongoClient, ObjectId } from 'mongodb'\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail'\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n        <MeetupDetail\r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}   \r\n        />\r\n  )\r\n}\r\n\r\n\r\nexport async function getStaticPaths () {\r\n    //fetch data from mongodb\r\n    const client = await MongoClient.connect('mongodb+srv://damla:Damla123.@cluster0.gywvewv.mongodb.net/meetups?retryWrites=true&w=majority')\r\n\r\n        //hold database that we connect \r\n        const db = client.db()\r\n\r\n        const meetupsCollection = db.collection('meetups')\r\n\r\n        const meetups = await meetupsCollection.find({} , {_id : 1}).toArray()\r\n\r\n        client.close()\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({\r\n            params: {\r\n                meetupId: meetup._id.toString()\r\n            }\r\n        }))\r\n    /*     paths : [\r\n            {\r\n                params: {\r\n                    meetupId : \"m1\"\r\n                }\r\n            },\r\n            {\r\n                params: {\r\n                    meetupId : \"m2\"\r\n                }\r\n            },\r\n        ] */\r\n    }\r\n}\r\n\r\nexport async function getStaticProps (context) {\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://damla:Damla123.@cluster0.gywvewv.mongodb.net/meetups?retryWrites=true&w=majority')\r\n\r\n        //hold database that we connect \r\n        const db = client.db()\r\n\r\n        const meetupsCollection = db.collection('meetups')\r\n\r\n        const selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId( meetupId) })\r\n\r\n        client.close()\r\n\r\n    const meetupId = context.params.meetupId\r\n    console.log(meetupId)\r\n    return {\r\n        props : {\r\n            meetupData : {\r\n                id: selectedMeetup._id.toString(),\r\n                title: selectedMeetup.title,\r\n                address:selectedMeetup.address,\r\n                image: selectedMeetup.image,\r\n                description: selectedMeetup.description\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails"]},"metadata":{},"sourceType":"module"}