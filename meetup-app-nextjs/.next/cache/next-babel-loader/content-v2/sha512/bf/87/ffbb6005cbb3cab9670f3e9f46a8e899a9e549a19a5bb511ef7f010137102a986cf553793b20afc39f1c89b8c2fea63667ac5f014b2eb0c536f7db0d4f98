{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\engin\\\\Desktop\\\\react\\\\react-course\\\\meetup-app-nextjs\\\\pages\\\\index.js\";\nimport React from 'react';\nimport { MongoClient } from 'mongodb';\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst DUMMY_MEETUPS = [{\n  id: \"m1\",\n  title: \"A First Meetup\",\n  image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n  address: 'Some address 5, 12345 Some City',\n  description: 'This is a first meetup!'\n}, {\n  id: 'm2',\n  title: 'A Second Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Some address 10, 12345 Some City',\n  description: 'This is a second meetup!'\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n/* export async function  getServerSideProps ( context) {\r\n    const req = context.req\r\n    const res = context.res\r\n    return {\r\n        props: {\r\n            meetups: DUMMY_MEETUPS\r\n        }\r\n    }\r\n} */\n\n\nexport async function getStaticProps() {\n  //fetch data from mongodb\n  const client = await MongoClient.connect('mongodb+srv://damla:Damla123.@cluster0.gywvewv.mongodb.net/meetups?retryWrites=true&w=majority'); //hold database that we connect \n\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close(); //always returns an object\n\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup.id.toStirng()\n      }))\n    },\n    //with revalidate the page is updated regularly after deployment\n    revalidate: 10\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/engin/Desktop/react/react-course/meetup-app-nextjs/pages/index.js"],"names":["React","MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","toStirng","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CAClB;AACIC,EAAAA,EAAE,EAAG,IADT;AAEIC,EAAAA,KAAK,EAAE,gBAFX;AAGIC,EAAAA,KAAK,EAAG,wHAHZ;AAIIC,EAAAA,OAAO,EAAE,iCAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CADkB,EAQlB;AACIJ,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,iBAFX;AAGIC,EAAAA,KAAK,EAAE,wHAHX;AAIIC,EAAAA,OAAO,EAAE,kCAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CARkB,CAAtB;;AAiBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBACM,QAAC,UAAD;AAAY,IAAA,OAAO,EAAIA,KAAK,CAACC;AAA7B;AAAA;AAAA;AAAA;AAAA,UADN;AAID,CALD;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,gGAApB,CAArB,CAFmC,CAI/B;;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAED,QAAMN,OAAO,GAAG,MAAOK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAvB;AACAN,EAAAA,MAAM,CAACO,KAAP,GAVgC,CAWnC;;AACA,SAAO;AACHV,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC5BjB,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADc;AAE5BE,QAAAA,OAAO,EAAEe,MAAM,CAACf,OAFY;AAG5BD,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAHc;AAI5BF,QAAAA,EAAE,EAAEkB,MAAM,CAAClB,EAAP,CAAUmB,QAAV;AAJwB,OAAL,CAAlB;AADN,KADJ;AAUH;AACAC,IAAAA,UAAU,EAAE;AAXT,GAAP;AAaH;AAGD,eAAef,QAAf","sourcesContent":["import React from 'react'\r\nimport { MongoClient } from 'mongodb'\r\nimport MeetupList from \"../components/meetups/MeetupList\"\r\n\r\nconst DUMMY_MEETUPS = [\r\n    {\r\n        id : \"m1\",\r\n        title: \"A First Meetup\",\r\n        image : \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\r\n        address: 'Some address 5, 12345 Some City',\r\n        description: 'This is a first meetup!'\r\n    },\r\n    {\r\n        id: 'm2',\r\n        title: 'A Second Meetup',\r\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\r\n        address: 'Some address 10, 12345 Some City',\r\n        description: 'This is a second meetup!'\r\n      }\r\n]\r\n\r\nconst HomePage = (props) => {\r\n  return (\r\n        <MeetupList meetups = {props.meetups} />\r\n \r\n  )\r\n}\r\n\r\n/* export async function  getServerSideProps ( context) {\r\n    const req = context.req\r\n    const res = context.res\r\n    return {\r\n        props: {\r\n            meetups: DUMMY_MEETUPS\r\n        }\r\n    }\r\n} */\r\n\r\nexport async function getStaticProps() {\r\n    //fetch data from mongodb\r\n    const client = await MongoClient.connect('mongodb+srv://damla:Damla123.@cluster0.gywvewv.mongodb.net/meetups?retryWrites=true&w=majority')\r\n\r\n        //hold database that we connect \r\n        const db = client.db()\r\n\r\n        const meetupsCollection = db.collection('meetups')\r\n\r\n       const meetups = await  meetupsCollection.find().toArray()\r\n       client.close()\r\n    //always returns an object\r\n    return {\r\n        props: {\r\n            meetups: meetups.map(meetup => ({\r\n                title: meetup.title,\r\n                address: meetup.address,\r\n                image: meetup.image,\r\n                id: meetup.id.toStirng()\r\n\r\n            }))\r\n        },\r\n        //with revalidate the page is updated regularly after deployment\r\n        revalidate: 10\r\n    }\r\n}\r\n\r\n\r\nexport default HomePage"]},"metadata":{},"sourceType":"module"}