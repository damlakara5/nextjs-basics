{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\engin\\\\Desktop\\\\react\\\\react-course\\\\meetup-app-nextjs\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from 'react';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  //fetch data from mongodb\n  const client = await MongoClient.connect('mongodb+srv://damla:Damla123.@cluster0.gywvewv.mongodb.net/meetups?retryWrites=true&w=majority'); //hold database that we connect \n\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n    /*     paths : [\r\n            {\r\n                params: {\r\n                    meetupId : \"m1\"\r\n                }\r\n            },\r\n            {\r\n                params: {\r\n                    meetupId : \"m2\"\r\n                }\r\n            },\r\n        ] */\n\n  };\n}\nexport async function getStaticProps(context) {\n  const client = await MongoClient.connect('mongodb+srv://damla:Damla123.@cluster0.gywvewv.mongodb.net/meetups?retryWrites=true&w=majority'); //hold database that we connect \n\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close();\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        address: selectedMeetup.address,\n        image: selectedMeetup.image,\n        description: selectedMeetup.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/engin/Desktop/react/react-course/meetup-app-nextjs/pages/[meetupId]/index.js"],"names":["React","MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACM,QAAC,YAAD;AACA,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADxB;AAEA,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFxB;AAGA,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH1B;AAIA,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ9B;AAAA;AAAA;AAAA;AAAA,UADN;AAQD,CATD;;AAYA,OAAO,eAAeC,cAAf,GAAiC;AACpC;AACA,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,gGAApB,CAArB,CAFoC,CAIhC;;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA4B;AAACC,IAAAA,GAAG,EAAG;AAAP,GAA5B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AACJ,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAC1BC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AADN;AADkB,KAAL,CAAlB;AAKX;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAlBW,GAAP;AAoBH;AAED,OAAO,eAAeC,cAAf,CAA+BC,OAA/B,EAAwC;AAE3C,QAAMlB,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,gGAApB,CAArB,CAF2C,CAIvC;;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEjB,QAAQ,CAAEyB,QAAF;AAAf,GAA1B,CAA7B;AAEAf,EAAAA,MAAM,CAACS,KAAP;AAEJ,QAAMM,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,SAAO;AACHtB,IAAAA,KAAK,EAAG;AACJC,MAAAA,UAAU,EAAG;AACT6B,QAAAA,EAAE,EAAEJ,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADK;AAETpB,QAAAA,KAAK,EAAEuB,cAAc,CAACvB,KAFb;AAGTC,QAAAA,OAAO,EAACsB,cAAc,CAACtB,OAHd;AAITF,QAAAA,KAAK,EAAEwB,cAAc,CAACxB,KAJb;AAKTG,QAAAA,WAAW,EAAEqB,cAAc,CAACrB;AALnB;AADT;AADL,GAAP;AAWH;AAED,eAAeN,aAAf","sourcesContent":["import React from 'react'\r\nimport { MongoClient, ObjectId } from 'mongodb'\r\nimport MeetupDetail from '../../components/meetups/MeetupDetail'\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n        <MeetupDetail\r\n        image={props.meetupData.image}\r\n        title={props.meetupData.title}\r\n        address={props.meetupData.address}\r\n        description={props.meetupData.description}   \r\n        />\r\n  )\r\n}\r\n\r\n\r\nexport async function getStaticPaths () {\r\n    //fetch data from mongodb\r\n    const client = await MongoClient.connect('mongodb+srv://damla:Damla123.@cluster0.gywvewv.mongodb.net/meetups?retryWrites=true&w=majority')\r\n\r\n        //hold database that we connect \r\n        const db = client.db()\r\n\r\n        const meetupsCollection = db.collection('meetups')\r\n\r\n        const meetups = await meetupsCollection.find({} , {_id : 1}).toArray()\r\n\r\n        client.close()\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({\r\n            params: {\r\n                meetupId: meetup._id.toString()\r\n            }\r\n        }))\r\n    /*     paths : [\r\n            {\r\n                params: {\r\n                    meetupId : \"m1\"\r\n                }\r\n            },\r\n            {\r\n                params: {\r\n                    meetupId : \"m2\"\r\n                }\r\n            },\r\n        ] */\r\n    }\r\n}\r\n\r\nexport async function getStaticProps (context) {\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://damla:Damla123.@cluster0.gywvewv.mongodb.net/meetups?retryWrites=true&w=majority')\r\n\r\n        //hold database that we connect \r\n        const db = client.db()\r\n\r\n        const meetupsCollection = db.collection('meetups')\r\n\r\n        const selectedMeetup = await meetupsCollection.findOne({ _id: ObjectId( meetupId) })\r\n\r\n        client.close()\r\n\r\n    const meetupId = context.params.meetupId\r\n    console.log(meetupId)\r\n    return {\r\n        props : {\r\n            meetupData : {\r\n                id: selectedMeetup._id.toString(),\r\n                title: selectedMeetup.title,\r\n                address:selectedMeetup.address,\r\n                image: selectedMeetup.image,\r\n                description: selectedMeetup.description\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default MeetupDetails"]},"metadata":{},"sourceType":"module"}